@model List<MembershipPlan>

<div class="container mt-5">
    <h1 class="mb-4">Planes de Membresía</h1>

    <div class="d-flex justify-content-between mb-3">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Nuevo Plan
        </a>
    </div>

    <div class="table-responsive">
        <table class="table-striped table-hover table">
            <thead class="table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th>Duración</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var plan in Model)
                {
                    <tr>
                        <td>@plan.Name</td>
                        <td>@(string.IsNullOrEmpty(plan.Description) ? "N/A" : plan.Description)</td>
                        <td>@plan.Price.ToString("C")</td>
                        <td>@plan.DurationInDays días</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@plan.Id"
                                   class="btn btn-sm btn-warning" title="Editar">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <button class="btn btn-sm btn-danger delete-btn"
                                        data-id="@plan.Id" title="Eliminar">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <a asp-action="Details" asp-route-id="@plan.Id"
                                   class="btn btn-sm btn-info" title="Detalles">
                                    <i class="bi bi-people"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
                $(document).ready(function() {
            $(document).on('click', '.delete-btn', function() {
                const id = $(this).data('id');
                const row = $(this).closest('tr');
                const planName = row.find('td:first').text();

                Swal.fire({
                    title: '¿Eliminar plan?',
                    html: `¿Estás seguro de eliminar el plan <b>${planName}</b>?<br>Esta acción no se puede deshacer.`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar',
                    reverseButtons: true,
                    showLoaderOnConfirm: true,
                    preConfirm: () => {
                        return fetch(`@Url.Action("Delete", "MembershipPlans")/${id}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText);
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(`Error: ${error}`);
                        });
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                }).then((result) => {
                    if (result.isConfirmed) {
                        if (result.value && result.value.success) {
                            row.fadeOut(400, () => row.remove());
                            Swal.fire('¡Eliminado!', result.value.message, 'success');
                        } else {
                            Swal.fire('¡Error!', result.value?.message || 'Error desconocido', 'error');
                        }
                    }
                });
            });
        });
    </script>
}